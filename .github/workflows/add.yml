name: Add Assets to Index

concurrency:
  group: index
  cancel-in-progress: false

on:
  workflow_call:
    inputs:
      project:
        type: string
        description: which project to add or update.
      urls:
        type: string
        description: asset urls, optional, default as empty string.
        default: ""
      repo:
        type: string
        description: Index hosting repository, default as caller repository.
        default: ${{ github.repository }}
      index-branch:
        type: string
        description: Which branch to store the index htmls, default as `idx-pages`.
        required: false
        default: idx-pages
    secrets:
      REPO_TOKEN:
        required: false
        description: if you want to checkout a different repository
          that is private you will need to provide your own PAT.

permissions:
  contents: write

jobs:
  add:
    runs-on: ubuntu-latest
    env:
      idx-checkout-path: idx-pages
    steps:
      - name: checkout script branch
        uses: actions/checkout@v3

      - name: checkout index branch
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repo }}
          path: ${{ env.idx-checkout-path }}
          ref: ${{ inputs.index-branch }}
          token: ${{ secrets.REPO_TOKEN || github.token }}

      - name: update simple index
        env:
          proj: ${{ inputs.project }}
          urls: ${{ inputs.urls }}
        run: |
          cd ${{ env.idx-checkout-path }}

          if [ ! -f index.html ]; then
              echo -e "<!DOCTYPE html>\n<html>\n  <body>\n  </body>\n</html>" > index.html
          fi

          proj=$(echo ${proj} | tr "\-_." "-" | tr -s "-" | tr "A-Z" "a-z")
          echo "::debug::project=${proj}"
          proj_html="${proj}.html"

          if [[ $(grep ">${proj}<" index.html) == "" ]]; then
              sed -i "/<\/body>/ i \    <a href=\"${proj}\/\">${proj}<\/a>" index.html
              echo -e "<!DOCTYPE html>\n<html>\n  <body>\n  </body>\n</html>" > $proj_html
          fi

          for url in $urls; do
              fname=$(basename $url)
              fname=(${fname//#/ }[0])
              if [[ $(cat $proj_html | grep ">${fname}<") == "" ]]; then
                  sed -i "/<\/body>/ i \    <a href=\"$url\">${fname}<\/a>" $proj_html
              else
                  sed -i "/>${fname}</ c \    <a href=\"$url\">${fname}<\/a>" $proj_html
              fi
          done;

      - name: commit index changes
        run: |
          cd ${{ env.idx-checkout-path }}
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "update project `${{ inputs.project }}`"
          git push
